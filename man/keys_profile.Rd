% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/keys_profile.R
\name{keys_profile}
\alias{keys_profile}
\title{Count severity of duplication using a selection of columns}
\usage{
keys_profile(df, keys)
}
\arguments{
\item{df}{A data frame, data frame extension (e.g. a tibble), or a
lazy data frame (e.g. from dbplyr or dtplyr).}

\item{keys}{Selection of columns using tidyselect}
}
\value{
A data.frame, or dtplyr_step_mutate, of results profiling how many levels of the keys have
0 dupes, 1 dupe, 2 dupes and so on
}
\description{
Profile the different levels (or severity) of dupes (0, 1, 2, ... dupes)
present in the data whereby uniqueness is defined by the "keys"
}
\details{
keys really are keys if the resulting tibble has one row. This row shows
there are n (= nrow(df)) unique combinations of the levels of the keys
with 0 dupes each.

Otherwise the resulting tibble has multiple rows. Each row shows how many of
each unique combination of the keys have 0 dupes, 1 dupe, 2 dupes etc. Here,
the "how many" bit is the profile and the "0 dupes" bit is the severity.
In this case, keys isn't really quite the right word: as even a single dupe
proves these keys aren't really keys at all
}
\examples{
\dontrun{
iris |> mutate(Species_id = row_number(), .by = Species) |>
keys_profile_dupe_severity(contains("Species"))
iris |> mutate(id = row_number()) |> keys_profile_dupe_severity(id)
iris |> keys_profile_dupe_severity(everything())
iris |> keys_profile_dupe_severity(c(starts_with("Sepal"), starts_with("Petal")))
iris |> keys_profile_dupe_severity(starts_with("Sepal"))
iris |> keys_profile_dupe_severity(Species)
}
}
